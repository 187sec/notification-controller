name: release
on:
  push:
    tags:
      - 'v*'

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Kustomize
        uses: fluxcd/pkg//actions/kustomize@master
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Generate release asset
        run: |
          mkdir -p config/release
          cp config/default/* config/release
          cd config/release
          kustomize edit set image fluxcd/notification-controller=fluxcd/notification-controller:${{ steps.get_version.outputs.VERSION }}
          kustomize build . > notification-controller.yaml
      - uses: crazy-max/ghaction-docker-buildx@v1
      - name: Publish image
        run: |
          echo "${{ secrets.DOCKER_FLUXCD_PASSWORD }}" | docker login --username fluxcdbot --password-stdin
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io --username fluxcdbot --password-stdin

          docker buildx build --platform "linux/amd64" \
            --output "type=image,push=true" \
            --build-arg "REVISION=${GITHUB_SHA}" \
            --build-arg "VERSION=${{ steps.get_version.outputs.VERSION }}" \
            --build-arg "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            --tag "ghcr.io/fluxcd/notification-controller:${{ steps.get_version.outputs.VERSION }}" \
            --tag "docker.io/fluxcd/notification-controller:${{ steps.get_version.outputs.VERSION }}" \
            --file Dockerfile .

          docker buildx build --platform "linux/arm64" \
            --output "type=image,push=true" \
            --build-arg "REVISION=${GITHUB_SHA}" \
            --build-arg "VERSION=${{ steps.get_version.outputs.VERSION }}" \
            --build-arg "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            --tag "ghcr.io/fluxcd/notification-controller-arm64:${{ steps.get_version.outputs.VERSION }}" \
            --file Dockerfile .
      - name: Create release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true
          body: |
            [CHANGELOG](https://github.com/fluxcd/notification-controller/blob/master/CHANGELOG.md)
      - name: Upload artifacts
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./config/release/notification-controller.yaml
          asset_name: notification-controller.yaml
          asset_content_type: text/plain
